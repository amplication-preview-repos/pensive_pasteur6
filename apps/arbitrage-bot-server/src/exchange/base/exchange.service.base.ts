/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Exchange as PrismaExchange,
  Price as PrismaPrice,
} from "@prisma/client";

export class ExchangeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ExchangeCountArgs, "select">): Promise<number> {
    return this.prisma.exchange.count(args);
  }

  async exchanges<T extends Prisma.ExchangeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExchangeFindManyArgs>
  ): Promise<PrismaExchange[]> {
    return this.prisma.exchange.findMany<Prisma.ExchangeFindManyArgs>(args);
  }
  async exchange<T extends Prisma.ExchangeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExchangeFindUniqueArgs>
  ): Promise<PrismaExchange | null> {
    return this.prisma.exchange.findUnique(args);
  }
  async createExchange<T extends Prisma.ExchangeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExchangeCreateArgs>
  ): Promise<PrismaExchange> {
    return this.prisma.exchange.create<T>(args);
  }
  async updateExchange<T extends Prisma.ExchangeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExchangeUpdateArgs>
  ): Promise<PrismaExchange> {
    return this.prisma.exchange.update<T>(args);
  }
  async deleteExchange<T extends Prisma.ExchangeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExchangeDeleteArgs>
  ): Promise<PrismaExchange> {
    return this.prisma.exchange.delete(args);
  }

  async findPrices(
    parentId: string,
    args: Prisma.PriceFindManyArgs
  ): Promise<PrismaPrice[]> {
    return this.prisma.exchange
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .prices(args);
  }
}
